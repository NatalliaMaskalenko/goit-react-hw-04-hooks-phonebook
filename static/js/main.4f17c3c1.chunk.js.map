{"version":3,"sources":["components/Form/Form.module.css","components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactsList/ContactsList.module.css","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","reset","className","s","form","e","preventDefault","form__label","form__input","value","type","pattern","title","required","onChange","currentTarget","form__button","ContactsItem","id","onDeleteContact","item","text","button","onClick","ContactsList","contacts","contacts__list","map","Filter","filter__label","filter__input","placeholder","App","key","defaultValue","JSON","parse","window","localStorage","getItem","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","useEffect","setItem","stringify","container","uuidv4","normolizedName","find","alert","prevContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f17c3c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3AZ1X\",\"form__label\":\"Form_form__label__Wc6W0\",\"form__input\":\"Form_form__input__gdutJ\",\"form__button\":\"Form_form__button__237xA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__2yCeS\",\"text\":\"ContactsItem_text__2wVb5\",\"button\":\"ContactsItem_button__zR_U4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__1FdMI\",\"filter__input\":\"Filter_filter__input__2QRNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__mjYzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__v2z3T\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport s from './Form.module.css'\r\n\r\n\r\n\r\nexport default function Form({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChangeName = e => {\r\n        setName(e.currentTarget.value);        \r\n    };\r\n\r\n     const handleChangeNumber = e => {\r\n        setNumber(e.currentTarget.value);        \r\n    };\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit({name, number});\r\n        reset()\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n    \r\n    return (\r\n       <form\r\n        className={s.form}\r\n        onSubmit={handelSubmit}>\r\n        <label className={s.form__label}>\r\n          Name\r\n           <input\r\n               className={s.form__input}\r\n               value={name}\r\n               type=\"text\"\r\n               name=\"name\"\r\n               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n               required\r\n               onChange = {handleChangeName}\r\n/>\r\n        </label>\r\n  \r\n        <label className={s.form__label}>\r\n          Number\r\n            <input\r\n               className={s.form__input}         \r\n               value={number}\r\n               type=\"tel\"\r\n               name=\"number\"\r\n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n               required\r\n               onChange = {handleChangeNumber}\r\n/>\r\n          </label>\r\n            <button className={s.form__button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )  \r\n}\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({ id, name, number, onDeleteContact }) => (\r\n     <li className={s.item}>\r\n        <p className={s.text}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button className={s.button} onClick = {()=> onDeleteContact(id)}>Delete</button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.css'\r\nimport ContactsItem from '../ContactsItem';\r\n\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.contacts__list}>\r\n        {contacts.map(({id, name, number} ) => (\r\n             <ContactsItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={onDeleteContact} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\n\r\nexport default ContactsList;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.filter__label}>\r\n        Find contacts by name\r\n        <input className={s.filter__input} type=\"text\" value={value} onChange={onChange} placeholder=\"Jacob Mercer\" />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { alert } from '@pnotify/core';\r\n\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport s from './App.module.css'\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n   const [state, setState] = useState(() => {\r\n       return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n   });\r\n    return [state, setState]\r\n};\r\n\r\nexport default function App() {\r\n    const [contacts, setContacts] = useLocalStorage('contacts', [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ]);\r\n     \r\n    const [filter, setFilter] = useState('');\r\n \r\n    const addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    }\r\n\r\n    const normolizedName = name.toLowerCase();\r\n\r\n    if (contacts.find(contact => contact.name.toLowerCase() === normolizedName)) {\r\n      return alert(`${name} is already in contacts`);\r\n        };\r\n        \r\n        setContacts(prevContacts => [contact, ...prevContacts]\r\n        );    \r\n    };   \r\n\r\n    const changeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n    };\r\n    \r\n    const deleteContact = (contactId) => {\r\n        setContacts(prevContacts=>prevContacts.filter(contact => contact.id !== contactId))\r\n    };\r\n\r\n   const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter)\r\n       );\r\n       return visibleContacts;\r\n    };\r\n    \r\n    const visibleContacts = getVisibleContacts();\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('contacts', JSON.stringify(contacts))\r\n    }, [contacts]);\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <h1>Phonebook</h1>\r\n        <Form\r\n          onSubmit={addContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter  value={filter} onChange={changeFilter}/>\r\n        <ContactsList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={deleteContact} />\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}